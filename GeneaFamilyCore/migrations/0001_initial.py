# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-11-05 08:10
from __future__ import unicode_literals

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Baptism',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date du baptême')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Heure du baptême')),
                ('date_is_approximately', models.BooleanField(default=False, help_text='Cochez cette case si la date est approximative.', verbose_name='Environ')),
            ],
        ),
        migrations.CreateModel(
            name='Birth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_type', models.CharField(choices=[('L', 'Legitime'), ('P', 'Pupille de la nation'), ('M', 'Né(e) sans vie'), ('N', 'Naturel'), ('R', 'Naturel (Non reconnu(e))')], max_length=1, verbose_name='Statut de naissance')),
                ('date', models.DateField(verbose_name='Date de naissance')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Heure de naissance')),
                ('date_is_approximately', models.BooleanField(default=False, help_text='Cochez cette case si la date est approximative.', verbose_name='Environ')),
            ],
        ),
        migrations.CreateModel(
            name='BirthComparer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Birth')),
            ],
        ),
        migrations.CreateModel(
            name='BirthWitness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Birth')),
            ],
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Death',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, verbose_name='Date de décès')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Heure de décès')),
                ('date_is_approximately', models.BooleanField(default=False, help_text='Cochez cette case si la date est approximative.', verbose_name='Environ')),
                ('death_reason', models.CharField(choices=[('N', 'Naturel'), ('M', 'Maladie'), ('I', 'Inconnue')], help_text='Selectionnez la raison du décès.', max_length=1, verbose_name='Raison')),
            ],
        ),
        migrations.CreateModel(
            name='DeathComparer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('death_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Death')),
            ],
        ),
        migrations.CreateModel(
            name='DeathWitness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('death_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Death')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Titre')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('start_date_is_approximately', models.BooleanField(default=False, help_text='Cochez, si la date est une approximation', verbose_name='Environ')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('end_date_is_approximately', models.BooleanField(default=False, help_text='Cochez, si la date est une approximation', verbose_name='Environ')),
                ('content', models.TextField(max_length=1000, null=True, verbose_name='Contenu')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ex: naissance, mariage, baptême, communion...', max_length=100, verbose_name="Type d'évenement")),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name')),
                ('time_period_type', models.CharField(choices=[('D', 'Date'), ('P', 'Durée')], help_text="\n\t\t<p><u>Aide:</u></p>\n\t\t<p> - Une Date est égale à une date de naissance\n\t\t(Ex: Né(e) le 01/01/2000).</p>\n\t\t<p> - Une durée est égale à un temps exercé dans un profession\n\t\t(Ex: Boulanger de 01/01/2000 à 31/01/2001).</p>\n\t\t<p>Attention: Après validation ce paramètre \n\t\tn'est plus modifiable !</p>", max_length=1, verbose_name='Type temporel')),
                ('description', models.CharField(blank=True, help_text="Description du type de l'èvenement", max_length=512)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_name', models.CharField(help_text='Veuillez inscrire le nom du métier', max_length=254, verbose_name='Metier')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('date_is_approximately', models.BooleanField(default=False, verbose_name='Cochez si la date est approximative')),
            ],
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=100, verbose_name='Pays')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ville')),
                ('additional_address_information', models.CharField(blank=True, max_length=255, verbose_name="Complément d'information de l'adresse")),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ['country'],
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Prénom')),
                ('family_name', models.CharField(max_length=50, verbose_name='Nom de famille')),
                ('pseudonyme', models.CharField(blank=True, max_length=250, verbose_name='Surnoms')),
                ('gender', models.CharField(choices=[('M', 'Homme'), ('W', 'Femme'), ('U', 'Inconnu(e)')], max_length=1, verbose_name='Genre')),
                ('read', models.BooleanField(default=True, help_text="Si coché, l'individu sait lire", verbose_name='Sait lire')),
                ('write', models.BooleanField(default=True, help_text="Si coché, l'individu sait écrire", verbose_name='Sait écrire')),
                ('baptism_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='GeneaFamilyCore.Baptism')),
                ('birth_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='GeneaFamilyCore.Birth')),
                ('death_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='GeneaFamilyCore.Death')),
            ],
            options={
                'ordering': ['family_name'],
            },
        ),
        migrations.CreateModel(
            name='MemberEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Event')),
                ('member_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Member')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Military',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('head', models.CharField(blank=True, max_length=50, verbose_name='Visage')),
                ('hair', models.CharField(blank=True, max_length=50, verbose_name='Cheveux')),
                ('forehead', models.CharField(blank=True, max_length=50, verbose_name='Front')),
                ('eyes', models.CharField(blank=True, max_length=50, verbose_name='Yeux')),
                ('nose', models.CharField(blank=True, max_length=50, verbose_name='Nez')),
                ('mouth', models.CharField(blank=True, max_length=50, verbose_name='Bouche')),
                ('chin', models.CharField(blank=True, max_length=50, verbose_name='Menton')),
                ('size', models.FloatField(blank=True, null=True, verbose_name='Taille')),
                ('rectified_size', models.FloatField(blank=True, null=True, verbose_name='Taille')),
                ('additional_note', models.TextField(blank=True, verbose_name='Remarque complémentaire')),
                ('special_brand', models.TextField(blank=True, verbose_name='Marques particulières')),
                ('military_instruction', models.CharField(blank=True, choices=[('0', 'Non-exercé'), ('1', 'Exercé')], max_length=1, verbose_name="Degré d'instruction militaire")),
                ('general_instruction', models.CharField(blank=True, choices=[('0', 'ne sait ni lire ni écrire'), ('1', 'sait lire seulement'), ('2', 'sait lire et écrire'), ('3', 'possède une instruction primaire plus développée'), ('4', "a obtenu le brevet de l'enseignement primaire"), ('5', 'bachelier, licencié, etc. (avec indication de diplôme)'), ('X', "dont on n'a pas pu vérifier l'instruction.")], max_length=1, verbose_name="Degré d'instruction général")),
                ('recruitment_matricul_number', models.IntegerField(blank=True, null=True, verbose_name='Numéro matricule du recrutement')),
                ('mobilisation_class', models.IntegerField(blank=True, null=True, verbose_name='Classe de mobilisation')),
                ('recruitment_draw', models.IntegerField(blank=True, null=True, verbose_name='Numéro de tirage')),
                ('canton_recruitment', models.CharField(blank=True, max_length=254, verbose_name='Canton de recrutement')),
                ('advice_decision', models.TextField(blank=True, verbose_name='Décision du conseil de révision')),
                ('advice_reason', models.TextField(blank=True, verbose_name='Motifs')),
            ],
        ),
        migrations.CreateModel(
            name='Residence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('date_is_approximately', models.BooleanField(default=False, verbose_name='Cochez si la date est approximative')),
                ('locality_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Locality', verbose_name='Lieu')),
                ('member_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Member', verbose_name='Membre')),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_type', models.CharField(choices=[('G', 'Global'), ('N', 'Naissance'), ('D', 'Décès'), ('B', 'Baptême'), ('M', 'Militaire')], max_length=1, verbose_name='Sourcer')),
                ('img_upload', models.ImageField(blank=True, null=True, upload_to='source', verbose_name='Photo')),
                ('url_link', models.CharField(blank=True, max_length=2048, null=True, verbose_name='Lien de la source (URL)')),
                ('page_link', models.CharField(blank=True, max_length=250, null=True, verbose_name='Numéro de page')),
                ('additional_note', models.TextField(blank=True, null=True, verbose_name='Notes complémentaire')),
                ('member_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Member')),
            ],
        ),
        migrations.CreateModel(
            name='Union',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('union_type', models.CharField(choices=[('M', 'Mariage'), ('U', 'Union libre'), ('P', 'Pacse'), ('D', 'Mariage posthume')], max_length=1, verbose_name="Type d'union")),
                ('start_date', models.DateField(blank=True, null=True, verbose_name="Date de l'union")),
                ('start_date_is_approximately', models.BooleanField(default=False, help_text="Cochez cette case si la date de début de l'union est approximative.", verbose_name='Environ')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name="Date de fin de l'union")),
                ('end_date_is_approximately', models.BooleanField(default=False, help_text="Cochez cette case si la date de fin de l'union est approximative.", verbose_name='Environ')),
                ('locality_fk', models.ForeignKey(blank=True, help_text="Lieu de l'union", null=True, on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Locality', verbose_name='Lieu')),
            ],
        ),
        migrations.CreateModel(
            name='UnionComparer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Member', verbose_name='Comparant(e)')),
                ('union_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Union')),
            ],
        ),
        migrations.CreateModel(
            name='UnionWitness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('for_who', models.CharField(choices=[('F', 'Le marié'), ('M', 'La mariée'), ('U', 'Non spéficié')], help_text='Pour qui ce témoin acte sa présence', max_length=1, verbose_name='Pour')),
                ('member_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Member', verbose_name='Témoin')),
                ('union_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Union')),
            ],
        ),
        migrations.AddField(
            model_name='member',
            name='military_fk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='GeneaFamilyCore.Military'),
        ),
        migrations.AddField(
            model_name='job',
            name='locality_fk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Locality', verbose_name='Lieu'),
        ),
        migrations.AddField(
            model_name='job',
            name='member_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Member', verbose_name='Membre'),
        ),
        migrations.AddField(
            model_name='family',
            name='father_fk',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='father', to='GeneaFamilyCore.Member', verbose_name='Père'),
        ),
        migrations.AddField(
            model_name='family',
            name='mother_fk',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mother', to='GeneaFamilyCore.Member', verbose_name='Mère'),
        ),
        migrations.AddField(
            model_name='family',
            name='union_fk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='GeneaFamilyCore.Union'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_type_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.EventType', verbose_name="Type d'évènement"),
        ),
        migrations.AddField(
            model_name='event',
            name='locality_fk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Locality', verbose_name='Lieu'),
        ),
        migrations.AddField(
            model_name='deathwitness',
            name='member_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Member', verbose_name='Témoin'),
        ),
        migrations.AddField(
            model_name='deathcomparer',
            name='member_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Member', verbose_name='Comparant'),
        ),
        migrations.AddField(
            model_name='death',
            name='locality_fk',
            field=models.ForeignKey(blank=True, help_text='Lieu du décès', null=True, on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Locality', verbose_name='Lieu'),
        ),
        migrations.AddField(
            model_name='child',
            name='child_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Member', verbose_name='Enfant'),
        ),
        migrations.AddField(
            model_name='child',
            name='family_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Family'),
        ),
        migrations.AddField(
            model_name='birthwitness',
            name='member_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Member', verbose_name='Témoin'),
        ),
        migrations.AddField(
            model_name='birthcomparer',
            name='member_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Member', verbose_name='Comparant'),
        ),
        migrations.AddField(
            model_name='birth',
            name='locality_fk',
            field=models.ForeignKey(blank=True, help_text='Lieu de naissance', null=True, on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Locality', verbose_name='Lieu'),
        ),
        migrations.AddField(
            model_name='baptism',
            name='godfather_fk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='godfather', to='GeneaFamilyCore.Member', verbose_name='Parrain'),
        ),
        migrations.AddField(
            model_name='baptism',
            name='godmother_fk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='godmother', to='GeneaFamilyCore.Member', verbose_name='marraine'),
        ),
        migrations.AddField(
            model_name='baptism',
            name='locality_fk',
            field=models.ForeignKey(blank=True, help_text='Lieu du baptême', null=True, on_delete=django.db.models.deletion.CASCADE, to='GeneaFamilyCore.Locality', verbose_name='Lieu'),
        ),
    ]
